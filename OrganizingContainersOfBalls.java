import java.util.Arrays;

public class OrganizingContainersOfBalls {
	
//	2
//	2
//	1 1
//	1 1
//	2
//	0 2
//	1 1
//	
//	2
//	3
//	1 3 1
//	2 1 2
//	3 3 3
//	3
//	0 2 1
//	1 1 1
//	2 0 0

	public static void main(String[] args) {
		
		
		
		//int [][] container = {{1,3,1},{2,1,2},{3,3,3}};
		
		//int [][] container = {{0,2,1},{1,1,1},{2,0,0}};
		
		//int [][] container = {{0,0,0},{0,0,0},{0,0,0}};
		
		//int [][] container = {{0, 2},{1 , 1}};
		
		/*
		 * int [][] container = {{850352964 , 977596446 , 949048147 , 948864413 ,
		 * 583894071 , 690057713 , 997747480 , 989967717}, {989808562 , 768213277 ,
		 * 465807106 , 806209383 , 997601076 , 726063750 , 886274860 , 999745463},
		 * {999716184 , 614327240 , 646233100 , 701848586 , 996640233 , 637114525 ,
		 * 979053522 , 973751653}, {729579413 , 623758391 , 789451199 , 998061161 ,
		 * 915515002 , 887943421 , 667982910 , 663066401}, {625660022 , 983861176 ,
		 * 747822232 , 924237583 , 765182731 , 879961473 , 915988053 , 973592376},
		 * {978486425 , 911982749 , 995853966 , 373364101 , 706580937 , 995621049 ,
		 * 869416897 , 906988203}, {996021364 , 982486194 , 880450667 , 971761433 ,
		 * 779568692 , 990258135 , 985311146 , 547004947}, {963237644 , 954080173 ,
		 * 997900896 , 551011238 , 803702301 , 931274261 , 685754083 , 585606717}};
		 */
				
		
		/* int [][] container = {{999336263 , 998799923}, {998799923 , 999763019}}; */
		 
		 
		
		  int [][] container = {{997612619 , 934920795 , 998879231 , 999926463},
		  {960369681 , 997828120 , 999792735 , 979622676}, {999013654 , 998634077 ,
		  997988323 , 958769423}, {997409523 , 999301350 , 940952923 , 993020546}};
		 
		 
		System.out.println(organizingContainers(container));	
		

		  
		 
		
	}
	
	
	static String organizingContainers(int[][] container){
		
		int n = container[0].length;
		
		int containerCount [] = new int[n];
		int typeCount [] = new int[n];
		
		for(int i=0;i<n;i++) {
			for(int j=0;j<n;j++) {
				containerCount[i]+=container[i][j];
				typeCount[j]+=container[i][j];
			}
		}
		
		Arrays.sort(containerCount);
		Arrays.sort(typeCount);
		
		
		for(int i=0;i<n;i++) {
			
			if(containerCount[i] != typeCount[i]) return "Impossible";
		}

		return "Possible";
		
		
		
		
	}
	


}
